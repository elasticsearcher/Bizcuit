/*! kibana - v3.1.2 - 2015-03-05
 * Copyright (c) 2015 Rashid Khan; Licensed Apache License */

define("panels/marvel/navigation/lib/loadDashboards",["require","config"],function(a){var b=a("config");return function(a,c){var d=b.elasticsearch+"/"+b.kibana_index+"/dashboard/_mget",e={ids:c};return a.post(d,e).then(function(a){return a.data.docs.filter(function(a){return null!=a.exists?a.exists:a.found})})}}),define("panels/marvel/navigation/lib/extractIds",[],function(){return function(a){var b=a.url.match(/([^\/]+.json)$/);return b?b[1]:void 0}}),define("panels/marvel/navigation/lib/findDashboardById",[],function(){return function(a){return function(b){return b._source.dashboard.base.id===a}}}),define("panels/marvel/navigation/lib/parseDashboard",[],function(){return function(a){try{a._source.dashboard=JSON.parse(a._source.dashboard)}catch(b){a._source.dashboard={}}return a}}),define("panels/marvel/navigation/lib/mergeLinksWithDashboards",["require","lodash","./findDashboardById"],function(a){var b=a("lodash"),c=a("./findDashboardById");return function(a){return function(d){var e,f=d.url.match(/([^\/]+\.json)$/);if(f){e=f[1];var g=b.find(a,c(e));g&&(d.url="../kibana/index.html#/dashboard/elasticsearch/"+encodeURIComponent(g._id))}return d}}}),define("panels/marvel/navigation/lib/filterLinks",["require","jquery"],function(a){var b=a("jquery"),c=b("<a />");return function(a){return function(b){return c.attr("href",b.url),c[0].href!==a}}}),define("factories/store",["angular","lodash"],function(a,b){var c=a.module("kibana.factories");c.factory("storeFactory",function(){return function(a,c,d){if(!b.isFunction(a.$watch))throw new TypeError("Invalid scope.");if(!b.isString(c))throw new TypeError("Invalid name, expected a string that the is unique to this store.");if(d&&!b.isPlainObject(d))throw new TypeError("Invalid defaults, expected a simple object or nothing");d=d||{};var e=localStorage.getItem(c);if(null!=e)try{e=JSON.parse(e)}catch(f){e=null}if(null==e)e=b.clone(d);else{if(!b.isPlainObject(e))throw new TypeError("Invalid store value"+e);b.defaults(e,d)}return a[c]=e,a.$watch(c,function(e){void 0===e?(localStorage.removeItem(c),a[c]=b.clone(d)):localStorage.setItem(c,JSON.stringify(e))},!0),e}})}),define("panels/marvel/navigation/module",["require","angular","app","lodash","./lib/loadDashboards","./lib/extractIds","./lib/findDashboardById","./lib/parseDashboard","./lib/mergeLinksWithDashboards","./lib/filterLinks","factories/store"],function(a){var b=a("angular"),c=a("app"),d=a("lodash"),e=a("./lib/loadDashboards"),f=a("./lib/extractIds"),g=a("./lib/findDashboardById"),h=a("./lib/parseDashboard"),i=a("./lib/mergeLinksWithDashboards"),j=a("./lib/filterLinks");a("factories/store");var k=b.module("kibana.panels.marvel.navigation",[]);c.useModule(k),k.controller("marvel.navigation",["$scope","$http","$q","dashboard","$location","$routeParams",function(a,b,c,k,l,m){a.panelMeta={status:"Stable",description:"A simple dropdown panel with a list of links"};var n={source:"panel",links:[],url:void 0,icon:"icon-caret-down"};d.defaults(a.panel,n),a.init=function(){"panel"===a.panel.source&&(a.links=a.panel.links),"url"===a.panel.source&&b.get(a.panel.url).then(function(c){var k=c.data.links,n=k.filter(f).map(f);e(b,n).then(function(b){if(b=d.map(b,h),"file"===m.kbnType){var c=d.find(b,g(m.kbnId));if(c){var e="/dashboard/elasticsearch/"+c._id;return void l.path(e)}}k=d.map(k,i(b));var f=window.location.href;f=f.replace(/\?.*$/,""),a.links=d.filter(k,j(f))})})}}])});