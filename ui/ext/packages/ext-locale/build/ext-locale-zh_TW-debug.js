/**
 * Traditional Chinese translation
 * By hata1234
 * 09 April 2007
 */
Ext.onReady(function() {
    var parseCodes;

    if (Ext.Date) {
        Ext.Date.monthNames = ["ä¸€æœˆ", "äºŒæœˆ", "ä¸‰æœˆ", "å››æœˆ", "äº”æœˆ", "å…­æœˆ", "ä¸ƒæœˆ", "å…«æœˆ", "ä¹?æœˆ", "å??æœˆ", "å??ä¸€æœˆ", "å??äºŒæœˆ"];

        Ext.Date.dayNames = ["æ˜ŸæœŸæ—¥", "æ˜ŸæœŸä¸€", "æ˜ŸæœŸäºŒ", "æ˜ŸæœŸä¸‰", "æ˜ŸæœŸå››", "æ˜ŸæœŸäº”", "æ˜ŸæœŸå…­"];

        Ext.Date.formatCodes.a = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";
        Ext.Date.formatCodes.A = "(this.getHours() < 12 ? 'ä¸Šå?ˆ' : 'ä¸‹å?ˆ')";

        parseCodes = {
            g: 1,
            c: "if (/(ä¸Šå?ˆ)/i.test(results[{0}])) {\n"
                + "if (!h || h == 12) { h = 0; }\n"
                + "} else { if (!h || h < 12) { h = (h || 0) + 12; }}",
            s: "(ä¸Šå?ˆ|ä¸‹å?ˆ)",
            calcAtEnd: true
        };

        Ext.Date.parseCodes.a = Ext.Date.parseCodes.A = parseCodes;
    }

    if (Ext.util && Ext.util.Format) {
        Ext.apply(Ext.util.Format, {
            thousandSeparator: ',',
            decimalSeparator: '.',
            currencySign: '\u00a5',
            // Chinese Yuan
            dateFormat: 'Y/m/d'
        });
    }
});

Ext.define("Ext.locale.zh_TW.view.View", {
    override: "Ext.view.View",
    emptyText: ""
});

Ext.define("Ext.locale.zh_TW.grid.plugin.DragDrop", {
    override: "Ext.grid.plugin.DragDrop",
    dragText: "é?¸æ“‡äº† {0} è¡Œ"
});

Ext.define("Ext.locale.zh_TW.tab.Tab", {
    override: "Ext.tab.Tab",
    closeText: "é—œé–‰æ­¤æ¨™ç±¤"
});

Ext.define("Ext.locale.zh_TW.form.field.Base", {
    override: "Ext.form.field.Base",
    invalidText: "æ•¸å€¼ä¸?ç¬¦å?ˆæ¬„ä½?è¦?å®š"
});

// changing the msg text below will affect the LoadMask
Ext.define("Ext.locale.zh_TW.view.AbstractView", {
    override: "Ext.view.AbstractView",
    loadingText: "è®€å?–ä¸­..."
});

Ext.define("Ext.locale.zh_TW.picker.Date", {
    override: "Ext.picker.Date",
    todayText: "ä»Šå¤©",
    minText: "æ—¥æœŸå¿…é ˆå¤§æ–¼æœ€å°?å®¹è¨±æ—¥æœŸ",
    maxText: "æ—¥æœŸå¿…é ˆå°?æ–¼æœ€å¤§å®¹è¨±æ—¥æœŸ",
    disabledDaysText: "",
    disabledDatesText: "",
    nextText: "ä¸‹å€‹æœˆ (Ctrl+å?³æ–¹å?‘é?µ)",
    prevText: "ä¸Šå€‹æœˆ (Ctrl+å·¦æ–¹å?‘é?µ)",
    monthYearText: "é?¸æ“‡æœˆä»½ (Ctrl+ä¸Š/ä¸‹æ–¹å?‘é?µé?¸æ“‡å¹´ä»½)",
    format: "y/m/d",
    ariaTitle: '{0}',
    ariaTitleDateFormat: 'Y\u5e74m\u6708d\u65e5',
    longDayFormat: 'Y\u5e74m\u6708d\u65e5',
    monthYearFormat: 'Y\u5e74m\u6708',
    getDayInitial: function (value) {
        // Grab the last character
        return value.substr(value.length - 1);
    }
});

Ext.define("Ext.locale.zh_TW.picker.Month", {
    override: "Ext.picker.Month",
    okText: "ç¡®å®š",
    cancelText: "å?–æ¶ˆ"
});

Ext.define("Ext.locale.zh_TW.toolbar.Paging", {
    override: "Ext.PagingToolbar",
    beforePageText: "ç¬¬",
    afterPageText: "é ?ï¼Œå…±{0}é ?",
    firstText: "ç¬¬ä¸€é ?",
    prevText: "ä¸Šä¸€é ?",
    nextText: "ä¸‹ä¸€é ?",
    lastText: "æœ€å¾Œé ?",
    refreshText: "é‡?æ–°æ•´ç?†",
    displayMsg: "é¡¯ç¤º{0} - {1}ç­†,å…±{2}ç­†",
    emptyMsg: 'æ²’æœ‰ä»»ä½•è³‡æ–™'
});

Ext.define("Ext.locale.zh_TW.form.field.Text", {
    override: "Ext.form.field.Text",
    minLengthText: "æ­¤æ¬„ä½?æœ€å°‘è¦?è¼¸å…¥ {0} å€‹å­—",
    maxLengthText: "æ­¤æ¬„ä½?æœ€å¤šè¼¸å…¥ {0} å€‹å­—",
    blankText: "æ­¤æ¬„ä½?ç‚ºå¿…å¡«",
    regexText: "",
    emptyText: null
});

Ext.define("Ext.locale.zh_TW.form.field.Number", {
    override: "Ext.form.field.Number",
    minText: "æ­¤æ¬„ä½?ä¹‹æ•¸å€¼å¿…é ˆå¤§æ–¼ {0}",
    maxText: "æ­¤æ¬„ä½?ä¹‹æ•¸å€¼å¿…é ˆå°?æ–¼ {0}",
    nanText: "{0} ä¸?æ˜¯å?ˆæ³•çš„æ•¸å­—"
});

Ext.define("Ext.locale.zh_TW.form.field.Date", {
    override: "Ext.form.field.Date",
    disabledDaysText: "ç„¡æ³•ä½¿ç”¨",
    disabledDatesText: "ç„¡æ³•ä½¿ç”¨",
    minText: "æ­¤æ¬„ä½?ä¹‹æ—¥æœŸå¿…é ˆåœ¨ {0} ä¹‹å¾Œ",
    maxText: "æ­¤æ¬„ä½?ä¹‹æ—¥æœŸå¿…é ˆåœ¨ {0} ä¹‹å‰?",
    invalidText: "{0} ä¸?æ˜¯æ­£ç¢ºçš„æ—¥æœŸæ ¼å¼? - å¿…é ˆåƒ?æ˜¯ ã€Œ {1} ã€? é€™æ¨£çš„æ ¼å¼?",
    format: "Y/m/d"
});

Ext.define("Ext.locale.zh_TW.form.field.ComboBox", {
    override: "Ext.form.field.ComboBox",
    valueNotFoundText: undefined
}, function() {
    Ext.apply(Ext.form.field.ComboBox.prototype.defaultListConfig, {
        loadingText: "è®€å?–ä¸­ ..."
    });
});

Ext.define("Ext.locale.zh_TW.form.field.VTypes", {
    override: "Ext.form.field.VTypes",
    emailText: 'æ­¤æ¬„ä½?å¿…é ˆè¼¸å…¥åƒ? "user@example.com" ä¹‹E-Mailæ ¼å¼?',
    urlText: 'æ­¤æ¬„ä½?å¿…é ˆè¼¸å…¥åƒ? "http:/' + '/www.example.com" ä¹‹ç¶²å?€æ ¼å¼?',
    alphaText: 'æ­¤æ¬„ä½?åƒ…èƒ½è¼¸å…¥å?Šå½¢è‹±æ–‡å­—æ¯?å?Šåº•ç·š( _ )ç¬¦è™Ÿ',
    alphanumText: 'æ­¤æ¬„ä½?åƒ…èƒ½è¼¸å…¥å?Šå½¢è‹±æ–‡å­—æ¯?ã€?æ•¸å­—å?Šåº•ç·š( _ )ç¬¦è™Ÿ'
});

Ext.define("Ext.locale.zh_TW.grid.header.Container", {
    override: "Ext.grid.header.Container",
    sortAscText: "æ­£å?‘æŽ’åº?",
    sortDescText: "å??å?‘æŽ’åº?",
    lockText: "éŽ–å®šæ¬„ä½?",
    unlockText: "è§£é–‹æ¬„ä½?éŽ–å®š",
    columnsText: "æ¬„ä½?"
});

Ext.define("Ext.locale.zh_TW.grid.PropertyColumnModel", {
    override: "Ext.grid.PropertyColumnModel",
    nameText: "å??ç¨±",
    valueText: "æ•¸å€¼",
    dateFormat: "Y/m/d"
});

Ext.define("Ext.locale.zh_TW.window.MessageBox", {
    override: "Ext.window.MessageBox",
    buttonText: {
        ok: "ç¢ºå®š",
        cancel: "å?–æ¶ˆ",
        yes: "æ˜¯",
        no: "å?¦"
    }    
});

// This is needed until we can refactor all of the locales into individual files
Ext.define("Ext.locale.zh_TW.Component", {	
    override: "Ext.Component"
});
