/**
 * Korean Translations By nicetip
 * 05 September 2007
 * Modify by techbug / 25 February 2008
 */
Ext.onReady(function() {

    if (Ext.Date) {
        Ext.Date.monthNames = ["1ì›”", "2ì›”", "3ì›”", "4ì›”", "5ì›”", "6ì›”", "7ì›”", "8ì›”", "9ì›”", "10ì›”", "11ì›”", "12ì›”"];

        Ext.Date.dayNames = ["ì?¼", "ì›”", "í™”", "ìˆ˜", "ëª©", "ê¸ˆ", "í† "];
    }

    if (Ext.util && Ext.util.Format) {
        Ext.apply(Ext.util.Format, {
            thousandSeparator: ',',
            decimalSeparator: '.',
            currencySign: '\u20a9',
            // Korean Won
            dateFormat: 'm/d/Y'
        });
    }
});

Ext.define("Ext.locale.ko.view.View", {
    override: "Ext.view.View",
    emptyText: ""
});

Ext.define("Ext.locale.ko.grid.plugin.DragDrop", {
    override: "Ext.grid.plugin.DragDrop",
    dragText: "{0} ê°œê°€ ì„ íƒ?ë?˜ì—ˆìŠµë‹ˆë‹¤."
});

Ext.define("Ext.locale.ko.tab.Tab", {
    override: "Ext.tab.Tab",
    closeText: "ë‹«ê¸°"
});

Ext.define("Ext.locale.ko.form.field.Base", {
    override: "Ext.form.field.Base",
    invalidText: "ì˜¬ë°”ë¥¸ ê°’ì?´ ì•„ë‹™ë‹ˆë‹¤."
});

// changing the msg text below will affect the LoadMask
Ext.define("Ext.locale.ko.view.AbstractView", {
    override: "Ext.view.AbstractView",
    loadingText: "ë¡œë”©ì¤‘..."
});

Ext.define("Ext.locale.ko.picker.Date", {
    override: "Ext.picker.Date",
    todayText: "ì˜¤ëŠ˜",
    minText: "ìµœì†Œ ë‚ ì§œë²”ìœ„ë¥¼ ë„˜ì—ˆìŠµë‹ˆë‹¤.",
    maxText: "ìµœëŒ€ ë‚ ì§œë²”ìœ„ë¥¼ ë„˜ì—ˆìŠµë‹ˆë‹¤.",
    disabledDaysText: "",
    disabledDatesText: "",
    nextText: 'ë‹¤ì?Œë‹¬(ì»¨íŠ¸ë¡¤í‚¤+ì˜¤ë¥¸ìª½ í™”ì‚´í‘œ)',
    prevText: 'ì?´ì „ë‹¬ (ì»¨íŠ¸ë¡¤í‚¤+ì™¼ì¡± í™”ì‚´í‘œ)',
    monthYearText: 'ì›”ì?„ ì„ íƒ?í•´ì£¼ì„¸ìš”. (ì»¨íŠ¸ë¡¤í‚¤+ìœ„/ì•„ëž˜ í™”ì‚´í‘œ)',
    todayTip: "{0} (ìŠ¤íŽ˜ì?´ìŠ¤ë°”)",
    format: "m/d/y",
    startDay: 0
});

Ext.define("Ext.locale.ko.picker.Month", {
    override: "Ext.picker.Month",
    okText: "í™•ì?¸",
    cancelText: "ì·¨ì†Œ"
});

Ext.define("Ext.locale.ko.toolbar.Paging", {
    override: "Ext.PagingToolbar",
    beforePageText: "íŽ˜ì?´ì§€",
    afterPageText: "/ {0}",
    firstText: "ì²« íŽ˜ì?´ì§€",
    prevText: "ì?´ì „ íŽ˜ì?´ì§€",
    nextText: "ë‹¤ì?Œ íŽ˜ì?´ì§€",
    lastText: "ë§ˆì§€ë§‰ íŽ˜ì?´ì§€",
    refreshText: "ìƒˆë¡œê³ ì¹¨",
    displayMsg: "ì „ì²´ {2} ì¤‘ {0} - {1}",
    emptyMsg: 'í‘œì‹œí•  ë?°ì?´í„°ê°€ ì—†ìŠµë‹ˆë‹¤.'
});

Ext.define("Ext.locale.ko.form.field.Text", {
    override: "Ext.form.field.Text",
    minLengthText: "ìµœì†Œê¸¸ì?´ëŠ” {0}ìž…ë‹ˆë‹¤.",
    maxLengthText: "ìµœëŒ€ê¸¸ì?´ëŠ” {0}ìž…ë‹ˆë‹¤.",
    blankText: "ê°’ì?„ ìž…ë ¥í•´ì£¼ì„¸ìš”.",
    regexText: "",
    emptyText: null
});

Ext.define("Ext.locale.ko.form.field.Number", {
    override: "Ext.form.field.Number",
    minText: "ìµœì†Œê°’ì?€ {0}ìž…ë‹ˆë‹¤.",
    maxText: "ìµœëŒ€ê°’ì?€ {0}ìž…ë‹ˆë‹¤.",
    nanText: "{0}ëŠ” ì˜¬ë°”ë¥¸ ìˆ«ìž?ê°€ ì•„ë‹™ë‹ˆë‹¤."
});

Ext.define("Ext.locale.ko.form.field.Date", {
    override: "Ext.form.field.Date",
    disabledDaysText: "ë¹„í™œì„±",
    disabledDatesText: "ë¹„í™œì„±",
    minText: "{0}ì?¼ ì?´í›„ì—¬ì•¼ í•©ë‹ˆë‹¤.",
    maxText: "{0}ì?¼ ì?´ì „ì?´ì–´ì•¼ í•©ë‹ˆë‹¤.",
    invalidText: "{0}ëŠ” ì˜¬ë°”ë¥¸ ë‚ ì§œí˜•ì‹?ì?´ ì•„ë‹™ë‹ˆë‹¤. - ë‹¤ì?Œê³¼ ê°™ì?€ í˜•ì‹?ì?´ì–´ì•¼ í•©ë‹ˆë‹¤. {1}",
    format: "m/d/y"
});

Ext.define("Ext.locale.ko.form.field.ComboBox", {
    override: "Ext.form.field.ComboBox",
    valueNotFoundText: undefined
}, function() {
    Ext.apply(Ext.form.field.ComboBox.prototype.defaultListConfig, {
        loadingText: "ë¡œë”©ì¤‘..."
    });
});

Ext.define("Ext.locale.ko.form.field.VTypes", {
    override: "Ext.form.field.VTypes",
    emailText: 'ì?´ë©”ì?¼ ì£¼ì†Œ í˜•ì‹?ì—? ë§žê²Œ ìž…ë ¥í•´ì•¼í•©ë‹ˆë‹¤. (ì˜ˆ: "user@example.com")',
    urlText: 'URL í˜•ì‹?ì—? ë§žê²Œ ìž…ë ¥í•´ì•¼í•©ë‹ˆë‹¤. (ì˜ˆ: "http:/' + '/www.example.com")',
    alphaText: 'ì˜?ë¬¸, ë°‘ì¤„(_)ë§Œ ìž…ë ¥í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.',
    alphanumText: 'ì˜?ë¬¸, ìˆ«ìž?, ë°‘ì¤„(_)ë§Œ ìž…ë ¥í•  ìˆ˜ ìžˆìŠµë‹ˆë‹¤.'
});

Ext.define("Ext.locale.ko.form.field.HtmlEditor", {
    override: "Ext.form.field.HtmlEditor",
    createLinkText: 'URLì?„ ìž…ë ¥í•´ì£¼ì„¸ìš”:'
}, function() {
    Ext.apply(Ext.form.field.HtmlEditor.prototype, {
        buttonTips: {
            bold: {
                title: 'êµµê²Œ (Ctrl+B)',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ë¥¼ êµµê²Œ í‘œì‹œí•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            italic: {
                title: 'ê¸°ìš¸ìž„ê¼´ (Ctrl+I)',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ë¥¼ ê¸°ìš¸ìž„ê¼´ë¡œ í‘œì‹œí•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            underline: {
                title: 'ë°‘ì¤„ (Ctrl+U)',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ì—? ë°‘ì¤„ì?„ í‘œì‹œí•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            increasefontsize: {
                title: 'ê¸€ê¼´í?¬ê¸° ëŠ˜ë¦¼',
                text: 'ê¸€ê¼´ í?¬ê¸°ë¥¼ í?¬ê²Œ í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            decreasefontsize: {
                title: 'ê¸€ê¼´í?¬ê¸° ì¤„ìž„',
                text: 'ê¸€ê¼´ í?¬ê¸°ë¥¼ ìž‘ê²Œ í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            backcolor: {
                title: 'í…?ìŠ¤íŠ¸ ê°•ì¡° ìƒ‰',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ì?˜ ë°°ê²½ìƒ‰ì?„ ë³€ê²½í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            forecolor: {
                title: 'ê¸€ê¼´ìƒ‰',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ì?˜ ìƒ‰ì?„ ë³€ê²½í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            justifyleft: {
                title: 'í…?ìŠ¤íŠ¸ ì™¼ìª½ ë§žì¶¤',
                text: 'ì™¼ìª½ì—? í…?ìŠ¤íŠ¸ë¥¼ ë§žì¶¥ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            justifycenter: {
                title: 'ê°€ìš´ë?° ë§žì¶¤',
                text: 'ê°€ìš´ë?°ì—? í…?ìŠ¤íŠ¸ë¥¼ ë§žì¶¥ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            justifyright: {
                title: 'í…?ìŠ¤íŠ¸ ì˜¤ë¥¸ìª½ ë§žì¶¤',
                text: 'ì˜¤ë¥¸ìª½ì—? í…?ìŠ¤íŠ¸ë¥¼ ë§žì¶¥ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            insertunorderedlist: {
                title: 'ê¸€ë¨¸ë¦¬ ê¸°í˜¸',
                text: 'ê¸€ë¨¸ë¦¬ ê¸°í˜¸ ëª©ë¡?ì?„ ì‹œìž‘í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            insertorderedlist: {
                title: 'ë²ˆí˜¸ ë§¤ê¸°ê¸°',
                text: 'ë²ˆí˜¸ ë§¤ê¸°ê¸° ëª©ë¡?ì?„ ì‹œìž‘í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            createlink: {
                title: 'í•˜ì?´í?¼ë§?í?¬',
                text: 'ì„ íƒ?í•œ í…?ìŠ¤íŠ¸ì—? í•˜ì?´í?¼ë§?í?¬ë¥¼ ë§Œë“­ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            },
            sourceedit: {
                title: 'ì†ŒìŠ¤íŽ¸ì§‘',
                text: 'ì†ŒìŠ¤íŽ¸ì§‘ ëª¨ë“œë¡œ ë³€í™˜í•©ë‹ˆë‹¤.',
                cls: Ext.baseCSSPrefix + 'html-editor-tip'
            }
        }
    });
});

Ext.define("Ext.locale.ko.grid.header.Container", {
    override: "Ext.grid.header.Container",
    sortAscText: "ì˜¤ë¦„ì°¨ìˆœ ì •ë ¬",
    sortDescText: "ë‚´ë¦¼ì°¨ìˆœ ì •ë ¬",
    lockText: "ì¹¼ëŸ¼ ìž ê¸ˆ",
    unlockText: "ì¹¼ëŸ¼ ìž ê¸ˆí•´ì œ",
    columnsText: "ì¹¼ëŸ¼ ëª©ë¡?"
});

Ext.define("Ext.locale.ko.grid.GroupingFeature", {
    override: "Ext.grid.feature.Grouping",
    emptyGroupText: '(None)',
    groupByText: 'í˜„ìž¬ í•„ë“œë¡œ ê·¸ë£¹í•‘í•©ë‹ˆë‹¤.',
    showGroupsText: 'ê·¸ë£¹ìœ¼ë¡œ ë³´ì—¬ì£¼ê¸°'

});

Ext.define("Ext.locale.ko.grid.PropertyColumnModel", {
    override: "Ext.grid.PropertyColumnModel",
    nameText: "í•­ëª©",
    valueText: "ê°’",
    dateFormat: "m/j/Y"
});

Ext.define("Ext.locale.ko.window.MessageBox", {
    override: "Ext.window.MessageBox",
    buttonText: {
        ok: "í™•ì?¸",
        cancel: "ì·¨ì†Œ",
        yes: "ì˜ˆ",
        no: "ì•„ë‹ˆì˜¤"
    }    
});

// This is needed until we can refactor all of the locales into individual files
Ext.define("Ext.locale.ko.Component", {	
    override: "Ext.Component"
});
